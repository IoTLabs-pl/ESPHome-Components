esphome:
  platformio_options:
    upload_speed: 921600
  on_boot:
    - automation_id: wmbus_reader_init_timeout
      then:
        - delay: 10s
        - script.execute: display_next_page

esp32:
  board: heltec_wifi_lora_32_V2
  flash_size: 8MB
  framework:
    type: esp-idf

logger:
  id: component_logger
  level: debug
  baud_rate: 115200

external_components:
  - source: github://IoTLabs-pl/wM-Bus-Gateway

network:

spi:
  clk_pin:
    number: GPIO5
    ignore_strapping_warning: true
  mosi_pin: GPIO27
  miso_pin: GPIO19

i2c:
  frequency: 800kHz
  scan: False
  sda: GPIO4
  scl:
    number: GPIO15
    ignore_strapping_warning: true

display:
  - id: wmbus_reader_display
    platform: ssd1306_i2c
    model: SSD1306 128x64
    address: 0x3C
    auto_clear_enabled: True
    contrast: 50%
    reset_pin:
      number: GPIO16

font:
  - id: font_large
    file: https://github.com/olikraus/u8g2/blob/master/tools/font/bdf/t0-22b-uni.bdf?raw=true
    glyphs: "/ABCFGHJKMRVWabcdghklmoprsz°³ 1234567890.-"
    glyphsets: []
  - id: font_small
    file: https://github.com/olikraus/u8g2/blob/master/tools/font/bdf/t0-16-uni.bdf?raw=true
    glyphsets:
      - GF_Latin_Core

image:
  - id: logo
    file: https://github.com/IoTLabs-pl/wM-Bus-Gateway/blob/master/resources/logo.png?raw=true
    type: binary
    invert_alpha: True

wmbus_radio:
  radio_type: SX1276
  cs_pin: GPIO18
  reset_pin: GPIO14
  irq_pin: GPIO35
  on_frame:
    - then:
        - script.execute: blink_led

wmbus_reader:

output:
  - platform: gpio
    id: wmbus_reader_vext
    pin: GPIO21
    inverted: True

light:
  - platform: status_led
    id: wmbus_reader_status_led
    pin: GPIO25

binary_sensor:
  - platform: gpio
    id: wmbus_reader_ext_button
    pin:
      number: GPIO0
      ignore_strapping_warning: true
      mode: input
      inverted: True
    on_press:
      - if:
          condition:
            lambda: return id(wmbus_reader_display).is_on();
          then:
            - script.execute: display_next_page
          else:
            - lambda: |-
                id(wmbus_reader_display).start_poller();
                id(wmbus_reader_display).turn_on();
            - script.execute: display_timeout

script:
  - id: blink_led
    then:
      - repeat:
          count: 20
          then:
            - light.control:
                id: wmbus_reader_status_led
                state: !lambda return iteration%2==0;
            - delay: 50ms
  - id: display_timeout
    mode: restart
    then:
      - component.update: wmbus_reader_display
      - delay: 30s
      - lambda: |-
          id(wmbus_reader_display).turn_off();
          id(wmbus_reader_display).stop_poller();
  - id: display_next_page
    then:
      - lambda: id(wmbus_reader_init_timeout).stop();
      - display.page.show_next: wmbus_reader_display
      - script.execute: display_timeout
